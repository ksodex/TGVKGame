import { Button } from "./Button"
import { useState } from "react"

export const LevelDifficult = ({
    levels,
    toPanel,
    gameType,
    categoryes,
    selectedCategory,
    setSelectedCategory,
    handleInitializeRound
}) => {
    const [level, setLevel] = useState(undefined)

    const handleInitRound = () => {
        switch (gameType) {
            case "memory":
                handleInitializeRound(level)
                break

            case "anagrams":
                handleInitializeRound(level, selectedCategory.type)
                break

            default:
                console.error("Game not found. Contact us administrator")
                break
        }
    }

    return <div className="space-y-4">
        {
            categoryes &&
            <div className="flex flex-col">
                <h1 className="text-3xl text-center font-bold">Категории</h1>

                <div className="flex justify-center items-center px-4">
                    <button>
                        <svg width="26px" height="26px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg">
                            <path d="M768 903.232l-50.432 56.768L256 512l461.568-448 50.432 56.768L364.928 512z" fill="#000000" />
                        </svg>
                    </button>

                    <div className="w-full">
                        <div className="flex gap-3 p-2 m-2">
                            {categoryes.map((item, index) => (
                                <div
                                    className={`${selectedCategory.id === item.id ? "bg-[#430B51] text-white" : "bg-white text-[#430B51]"} rounded-md font-semibold transition-colors w-full p-2`}
                                    onClick={() => setSelectedCategory(item)}
                                    key={index}
                                >
                                    <p className="text-center">{item.title}</p>
                                </div>
                            ))}
                        </div>
                    </div>

                    <button>
                        <svg width="26px" height="26px" viewBox="0 0 1024 1024" class="icon" version="1.1" xmlns="http://www.w3.org/2000/svg">
                            <path d="M256 120.768L306.432 64 768 512l-461.568 448L256 903.232 659.072 512z" fill="#000000" />
                        </svg>
                    </button>
                </div>
            </div>
        }

        <div>
            <h1 className="text-3xl text-center font-bold">Уровень сложности</h1>

            <div className="flex flex-col space-y-3 p-2 m-2 mb-20">
                {levels.map((item, index) => (
                    <div
                        key={index}
                        onClick={() => setLevel(item.code)}
                        className={`flex items-center justify-between ${level === item.code ? "bg-[#430B51] text-white" : "bg-white"} rounded-xl transition-colors p-2`}>
                        <div>
                            <h1 className={`${level === item.code ? "text-white" : "text-[#430B51]"} font-semibold`}>{item.levelName}</h1>
                            <p>{item.description}</p>
                        </div>

                        <div className="flex flex-col">
                            <div className="flex gap-2 p-1">
                                <span>{item.winMoney}</span>
                                <svg width="21" height="21" viewBox="0 0 21 21" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M20.4953 15.6782C20.3312 18.8094 15.851 21 10.5 21C5.04801 21 0.5 18.726 0.5 15.5V5.5L0.504656 5.32177C0.668755 2.19056 5.14898 0 10.5 0C15.952 0 20.5 2.27401 20.5 5.5V15.5L20.4953 15.6782ZM18.5011 8.8655C16.6646 10.1958 13.7422 11 10.5 11C7.25844 11 4.33644 10.1961 2.49992 8.86623L2.5 10.5C2.5 12.2446 6.01086 14 10.5 14C14.9891 14 18.5 12.2446 18.5 10.5L18.5011 8.8655ZM10.5 2C6.01086 2 2.5 3.75543 2.5 5.5C2.5 7.24457 6.01086 9 10.5 9C14.9891 9 18.5 7.24457 18.5 5.5C18.5 3.75543 14.9891 2 10.5 2ZM18.5011 13.8655C16.6646 15.1958 13.7422 16 10.5 16C7.25844 16 4.33644 15.1961 2.49992 13.8662L2.5 15.5L2.50517 15.6163C2.65652 17.3217 6.11062 19 10.5 19C14.9891 19 18.5 17.2446 18.5 15.5L18.5011 13.8655Z" fill="#FF4800"></path>
                                </svg>
                            </div>

                            <div className="flex gap-2 p-1">
                                <span>{item.winExp}</span>
                                <h1 className="text-[#FF4800] uppercase font-bold">exp</h1>
                            </div>
                        </div>
                    </div>
                ))}
            </div>

            <div className="flex gap-4 fixed bottom-0 left-0 right-0 bg-white p-4 pb-8 shadow-lg">
                <Button
                    onClick={handleInitRound}
                    isFulled
                >
                    <svg width="16" height="12" viewBox="0 0 16 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M10.4285 0.535767C14.2969 0.535767 15.8928 3.55031 15.8928 7.21434C15.8928 9.93501 15.1281 11.4643 13.4643 11.4643C12.7716 11.4643 12.3126 11.1722 11.7896 10.5577L11.6907 10.4386C11.635 10.37 11.4164 10.0935 11.3614 10.0258L11.2663 9.91133C10.7332 9.28516 10.2902 9.03577 9.51783 9.03577H6.48212C5.70976 9.03577 5.26677 9.28516 4.73369 9.91133L4.6386 10.0258C4.58357 10.0935 4.36498 10.37 4.3092 10.4386L4.21032 10.5577C3.6873 11.1722 3.22839 11.4643 2.53569 11.4643C0.871684 11.4643 0.107117 9.9352 0.107117 7.21434C0.107117 3.55031 1.70305 0.535767 5.5714 0.535767H10.4285ZM10.4285 1.75005H5.5714C2.58261 1.75005 1.3214 4.13234 1.3214 7.21434C1.3214 9.35062 1.77112 10.2501 2.53569 10.2501C2.79097 10.2501 2.97931 10.1322 3.28721 9.76893L3.6255 9.3482L3.8032 9.13123C4.55179 8.25094 5.2947 7.82148 6.48212 7.82148H9.51783C10.7053 7.82148 11.4482 8.25094 12.1967 9.13123L12.3038 9.26005L12.7127 9.76893C13.0206 10.1322 13.209 10.2501 13.4643 10.2501C14.2287 10.2501 14.6785 9.35043 14.6785 7.21434C14.6785 4.13234 13.4173 1.75005 10.4285 1.75005ZM5.27528 3.26791C5.39138 3.26791 5.48663 3.29045 5.56578 3.33278C5.64493 3.37512 5.70705 3.43724 5.74938 3.51639C5.79172 3.59554 5.81426 3.69079 5.81426 3.80689L5.81365 4.5423L6.55028 4.54291C6.66638 4.54291 6.76163 4.56545 6.84078 4.60778C6.91993 4.65012 6.98205 4.71224 7.02438 4.79139C7.06672 4.87054 7.08926 4.96579 7.08926 5.08189V5.09679C7.08926 5.21288 7.06672 5.30813 7.02438 5.38729C6.98205 5.46644 6.91993 5.52856 6.84078 5.57089C6.76163 5.61322 6.66638 5.63577 6.55028 5.63577L5.81365 5.63516L5.81426 6.37179C5.81426 6.48788 5.79172 6.58313 5.74938 6.66229C5.70705 6.74144 5.64493 6.80356 5.56578 6.84589C5.48663 6.88822 5.39138 6.91077 5.27528 6.91077H5.26038C5.14428 6.91077 5.04904 6.88822 4.96988 6.84589C4.89073 6.80356 4.82861 6.74144 4.78628 6.66229C4.74395 6.58313 4.7214 6.48788 4.7214 6.37179L4.7208 5.63516L3.98538 5.63577C3.86928 5.63577 3.77404 5.61322 3.69488 5.57089C3.61573 5.52856 3.55361 5.46644 3.51128 5.38729C3.46895 5.30813 3.4464 5.21288 3.4464 5.09679V5.08189C3.4464 4.96579 3.46895 4.87054 3.51128 4.79139C3.55361 4.71224 3.61573 4.65012 3.69488 4.60778C3.77404 4.56545 3.86928 4.54291 3.98538 4.54291L4.7208 4.5423L4.7214 3.80689C4.7214 3.69079 4.74395 3.59554 4.78628 3.51639C4.82861 3.43724 4.89073 3.37512 4.96988 3.33278C5.04904 3.29045 5.14428 3.26791 5.26038 3.26791H5.27528ZM10.7768 5.69648C10.9211 5.69648 11.0116 5.71902 11.0908 5.76136C11.1699 5.80369 11.2321 5.86581 11.2744 5.94496C11.3167 6.02411 11.3393 6.11467 11.3393 6.25893V6.34832C11.3393 6.49258 11.3167 6.58313 11.2744 6.66229C11.2321 6.74144 11.1699 6.80356 11.0908 6.84589C11.0116 6.88822 10.9211 6.91077 10.7768 6.91077H10.6874C10.5432 6.91077 10.4526 6.88822 10.3735 6.84589C10.2943 6.80356 10.2322 6.74144 10.1898 6.66229C10.1475 6.58313 10.125 6.49258 10.125 6.34832V6.25893C10.125 6.11467 10.1475 6.02411 10.1898 5.94496C10.2322 5.86581 10.2943 5.80369 10.3735 5.76136C10.4526 5.71902 10.5432 5.69648 10.6874 5.69648H10.7768ZM9.56253 4.4822C9.70679 4.4822 9.79734 4.50474 9.87649 4.54707C9.95565 4.5894 10.0178 4.65152 10.0601 4.73068C10.1024 4.80983 10.125 4.90038 10.125 5.04464V5.13404C10.125 5.27829 10.1024 5.36885 10.0601 5.448C10.0178 5.52715 9.95565 5.58927 9.87649 5.63161C9.79734 5.67394 9.70679 5.69648 9.56253 5.69648H9.47313C9.32888 5.69648 9.23832 5.67394 9.15917 5.63161C9.08002 5.58927 9.0179 5.52715 8.97556 5.448C8.93323 5.36885 8.91069 5.27829 8.91069 5.13404V5.04464C8.91069 4.90038 8.93323 4.80983 8.97556 4.73068C9.0179 4.65152 9.08002 4.5894 9.15917 4.54707C9.23832 4.50474 9.32888 4.4822 9.47313 4.4822H9.56253ZM11.9911 4.4822C12.1354 4.4822 12.2259 4.50474 12.3051 4.54707C12.3842 4.5894 12.4463 4.65152 12.4887 4.73068C12.531 4.80983 12.5535 4.90038 12.5535 5.04464V5.13404C12.5535 5.27829 12.531 5.36885 12.4887 5.448C12.4463 5.52715 12.3842 5.58927 12.3051 5.63161C12.2259 5.67394 12.1354 5.69648 11.9911 5.69648H11.9017C11.7574 5.69648 11.6669 5.67394 11.5877 5.63161C11.5086 5.58927 11.4465 5.52715 11.4041 5.448C11.3618 5.36885 11.3393 5.27829 11.3393 5.13404V5.04464C11.3393 4.90038 11.3618 4.80983 11.4041 4.73068C11.4465 4.65152 11.5086 4.5894 11.5877 4.54707C11.6669 4.50474 11.7574 4.4822 11.9017 4.4822H11.9911ZM10.7768 3.26791C10.9211 3.26791 11.0116 3.29045 11.0908 3.33278C11.1699 3.37512 11.2321 3.43724 11.2744 3.51639C11.3167 3.59554 11.3393 3.6861 11.3393 3.83035V3.91975C11.3393 4.06401 11.3167 4.15456 11.2744 4.23371C11.2321 4.31287 11.1699 4.37499 11.0908 4.41732C11.0116 4.45965 10.9211 4.4822 10.7768 4.4822H10.6874C10.5432 4.4822 10.4526 4.45965 10.3735 4.41732C10.2943 4.37499 10.2322 4.31287 10.1898 4.23371C10.1475 4.15456 10.125 4.06401 10.125 3.91975V3.83035C10.125 3.6861 10.1475 3.59554 10.1898 3.51639C10.2322 3.43724 10.2943 3.37512 10.3735 3.33278C10.4526 3.29045 10.5432 3.26791 10.6874 3.26791H10.7768Z" fill="white" />
                    </svg>
                    <span>Играть</span>
                </Button>

                <Button
                    onClick={() => toPanel(`${gameType}Info`)}
                >
                    <svg width="15" height="16" viewBox="0 0 15 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M7.50001 0.714233C11.5238 0.714233 14.7857 3.97616 14.7857 7.99995C14.7857 12.0237 11.5238 15.2857 7.50001 15.2857C3.47622 15.2857 0.214294 12.0237 0.214294 7.99995C0.214294 3.97616 3.47622 0.714233 7.50001 0.714233ZM7.50001 1.92852C4.14685 1.92852 1.42858 4.64679 1.42858 7.99995C1.42858 11.3531 4.14685 14.0714 7.50001 14.0714C10.8532 14.0714 13.5714 11.3531 13.5714 7.99995C13.5714 4.64679 10.8532 1.92852 7.50001 1.92852ZM7.54471 6.78566C7.68896 6.78566 7.77952 6.80821 7.85867 6.85054C7.93782 6.89287 7.99994 6.95499 8.04228 7.03414C8.08461 7.1133 8.10715 7.20385 8.10715 7.34811V11.0804C8.10715 11.2246 8.08461 11.3152 8.04228 11.3943C7.99994 11.4735 7.93782 11.5356 7.85867 11.5779C7.77952 11.6203 7.68896 11.6428 7.54471 11.6428H7.45531C7.31105 11.6428 7.2205 11.6203 7.14135 11.5779C7.06219 11.5356 7.00007 11.4735 6.95774 11.3943C6.91541 11.3152 6.89287 11.2246 6.89287 11.0804V7.34811C6.89287 7.20385 6.91541 7.1133 6.95774 7.03414C7.00007 6.95499 7.06219 6.89287 7.14135 6.85054C7.2205 6.80821 7.31105 6.78566 7.45531 6.78566H7.54471ZM7.50001 4.11423C7.96945 4.11423 8.35001 4.49479 8.35001 4.96423C8.35001 5.43368 7.96945 5.81423 7.50001 5.81423C7.03057 5.81423 6.65001 5.43368 6.65001 4.96423C6.65001 4.49479 7.03057 4.11423 7.50001 4.11423Z" fill="white" />
                    </svg>
                </Button>
            </div>
        </div>
    </div>
}
